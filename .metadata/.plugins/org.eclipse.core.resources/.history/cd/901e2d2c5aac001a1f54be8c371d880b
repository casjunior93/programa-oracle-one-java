package br.com.bytebank.banco.test;

import java.util.ArrayList;

import br.com.bytebank.banco.modelo.Cliente;
import br.com.bytebank.banco.modelo.Conta;
import br.com.bytebank.banco.modelo.ContaCorrente;
import br.com.bytebank.banco.modelo.ContaPoupanca;

public class TesteArrayList {
	public static void main(String[] args) {
		//o ArrayList será o guardador de referencias com posicoe sque giram em 1000
		//limita a smoente Conta
		ArrayList<Conta> lista = new ArrayList<Conta>();
		
		Conta cc = new ContaCorrente(22, 11);
//		Cliente cli = new Cliente();
		lista.add(cc);
		
		Conta cp = new ContaPoupanca(23, 12);
		lista.add(cp);
		
		System.out.println("Tamhno 1: " + lista.size());
		
		//exibindo elemtnetos do array
		//retorno tipo Object, já que é um array de referencias genericas
//		Object ref = lista.get(1);
		//por que restringimos a apenas Conta, não é masi necessario o type cast
//		Conta ref = (Conta) lista.get(0);
		Conta ref = lista.get(0);
		
		System.out.println(ref.getNumero());
		System.out.println(ref); //imprime o toString()
		
		//removendo elemento do array
		lista.remove(1);
		
		System.out.println("Tamanho 2: " + lista.size());
		
		Conta cc1 = new ContaCorrente(45, 37);
		lista.add(cc1);
		
		Conta cp1 = new ContaPoupanca(45, 37);
		lista.add(cp1);
		
		System.out.println(lista.size());
		
		System.out.println("----------------------------");
		for(int i = 0; i < lista.size(); i++) {
			//retorna referencia do tipo object
			Object oRef = lista.get(i);
			System.out.println(oRef);
		}
		System.out.println("----------------------------");
		
		//for que retorna um Object a cada iteracao
		//devido a restrição por conta, podemos usar aqui diretamente Conta
//		for(Object o : lista) {
		for(Conta o : lista) {
			System.out.println(o);
		}
	}
}
